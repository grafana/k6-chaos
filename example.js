import { sleep } from 'k6';
import { KubernetesClient, StressNodesAttack } from './src/chaos.js';

export default function () {
  // We instantiate a new *chaotic* Kubernetes client.
  const kubernetes = new KubernetesClient()

  // We run KillRandomPod to randomly kill a pod in the specified namespace.
  const killed = kubernetes.killRandomPod('operations')
  console.log(`Killed pod: ${killed}`);

  // And then, we run DeleteRandomNamespace to delete a random namespace.
  const deleted = kubernetes.deleteRandomNamespace()
  console.log(`Deleted namespace: ${deleted}`);

  // We stress all the nodes in the cluster for a while.
  let stress = new StressNodesAttack(kubernetes);
  stress.withCPU("100").withIO("100").withVM("100").withTimeout("15s").inNodes(kubernetes.getNodeNames()).start();

  // We wait a bit.
  sleep(20);

  // We clean all the mess generated by the stress attack.
  stress.clean();
}